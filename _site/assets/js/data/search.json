[
  
  {
    "title": "Flare-on Challenge 2019 Write-up",
    "url": "/flare-on-challenge-2019-write-up/",
    "categories": "write-ups",
    "tags": "CTF, flare-on, Reversing, Crypto, Forensic, Windows, Python, Android, Javascript, NES",
    "date": "2019-09-28 13:30:00 +0800",
    





    "snippet": "Another year of Flare-on challenge ! As a guy who’s interetesed in reverse engineering, this is definitely a great chance for me to practice/sharpen my reversing skills ! This year it has 12 challenges covering Windows PE, Linux ELF, Android apk, NES ROM …… and over 5,700 participants !Final rank..."
  },
  
  {
    "title": "Flare-on Challenge 2018 Write-up",
    "url": "/flare-on-challenge-2018-write-up/",
    "categories": "write-ups",
    "tags": "CTF, flare-on, Reversing, Crypto, Forensic, Windows, Javascript, web_assembly, Java, Python, qemu",
    "date": "2018-10-06 15:29:15 +0800",
    





    "snippet": "Flare-on challenge is a Reverse-style CTF challenge created by the FireEye FLARE team. The CTF contains lots of interesting, real-world style reversing challenges ( e.g. de-obfucating binary, malware analysis, …etc).  This year is the fifth annual of the CTF and has a total of 12 challenges, cove..."
  },
  
  {
    "title": "Some notes on migrating to Jekyll",
    "url": "/some-notes-on-migrating-to-jekyll/",
    "categories": "note",
    "tags": "Jekyll, ruby, git, docker",
    "date": "2018-09-28 00:00:00 +0800",
    





    "snippet": "Recently I’ve decided to migrate my blogging framework from Hexo to Jekyll. Here are some notes that I took for recording the migration process.Install JekyllHere I created a Dockerfile for my blogging environment.From Hexo to JekyllSince I’m migrating to Jekyll, I had to clean my bruce30262.gith..."
  },
  
  {
    "title": "Chakrazy -- exploiting type confusion bug in ChakraCore engine",
    "url": "/Chakrazy-exploiting-type-confusion-bug-in-ChakraCore/",
    "categories": "write-ups",
    "tags": "CTF, Pwnable, Javascript, Plaid, Edge, ChakraCore, Browser, type_confusion",
    "date": "2017-12-26 19:12:00 +0800",
    





    "snippet": "Chakrazy is a browser CTF challenge created by team PPP for the 2017 PlaidCTF event. It’s a challenge based on Microsoft’s ChakraCore Javascript engine. You can download the challenge file here.Similar to my previous post, this post is more like a note about how I learn to exploit the type confus..."
  },
  
  {
    "title": "Learning browser exploitation via 33C3 CTF  feuerfuchs challenge",
    "url": "/Learning-browser-exploitation-via-33C3-CTF-feuerfuchs-challenge/",
    "categories": "write-ups",
    "tags": "33C3, Firefox, Browser, SpiderMonkey, Javascript, CTF, Pwnable",
    "date": "2017-12-16 05:24:00 +0800",
    





    "snippet": "So I’ve been playing with the browser exploitation recently, by studying some browser CTF challenges. So far I’ve tried qwn2own, SGX_Browser and feuerfuchs.qwn2own and SGX_Browser are both great for getting started with the brower exploitation. However, they are not “real world” enough, since bot..."
  },
  
  {
    "title": "hxp CTF 2017 -- hardened_flag_store",
    "url": "/hxp-CTF-2017-hardened-flag-store/",
    "categories": "write-ups",
    "tags": "CTF, Pwnable, Python, BOF, format_string, seccomp, hxp",
    "date": "2017-11-21 03:18:00 +0800",
    





    "snippet": "Category: Pwnable64 bit ELF with PIE, NX, FULL RELRO enabledThe program will read a secret string from “secret.txt” and store the string address on stack. Then it will use seccomp to create a whitelist of syscalls. We can analyze the filter by using seccomp-tools: line  CODE  JT   JF      K======..."
  },
  
  {
    "title": "MeePwn CTF 2017 -- Brainfuck 1 &amp; 2",
    "url": "/MeePwn-CTF-2017-Brainfuck-1-2/",
    "categories": "write-ups",
    "tags": "CTF, Python, Pwnable, heap, MeePwn, brainfuck, shellcode",
    "date": "2017-07-16 23:28:00 +0800",
    





    "snippet": "Category: PwnableBoth binaries are 64 bit ELF, No RELRO, No canary, PIE &amp;amp; NX enabled.Brainfuck1The program is a simple brainfuck language interpreter: it read input ( brainfuck code ), translate the code to the corresponding x86 machine code and execute it.For example, if we input +++++++..."
  },
  
  {
    "title": "MeePwn CTF 2017 -- anotherarena",
    "url": "/MeePwn-CTF-2017-anotherarena/",
    "categories": "write-ups",
    "tags": "CTF, Pwnable, Python, MeePwn, heap",
    "date": "2017-07-16 19:00:00 +0800",
    





    "snippet": "Category: Pwnable64 bit ELF, Partial RELRO, canary &amp;amp; NX enabled, No PIE.The program is a simple crackme program with multi-thread. First, the program will read the FLAG into a global buffer flag . Then, it will ask us to input the size of a buffer. Later the program will use a thread to m..."
  },
  
  {
    "title": "MeePwn CTF 2017 -- Old School",
    "url": "/MeePwn-CTF-2017-Old-School/",
    "categories": "write-ups",
    "tags": "CTF, Python, Pwnable, MeePwn, BOF",
    "date": "2017-07-16 17:56:00 +0800",
    





    "snippet": "Category: Pwnable64 bit ELF, Partial RELRO, NX enabled, No PIE, has canary.-------- BookStore --------1.       Add Book.2.       Edit Book.3.       Delete Book.4.       Show Books.5.       Exit.As we can see we can add, edit, delete or show a book. Books are stored in a pointer array books, each ..."
  },
  
  {
    "title": "Migrate to Github Pages",
    "url": "/Migrate-to-Github-Pages/",
    "categories": "note",
    "tags": "Hexo, node.js, git, docker, NexT",
    "date": "2017-05-30 07:31:00 +0800",
    





    "snippet": "So I finally decided to migrate my blog from Logdown to Github Pages. Took me about three days to get it done. Here I write down some notes to record the whole migration process.Installing HexoI chose Hexo for my blog framework.Environment SettingFirst I prepared a docker image for my blogging en..."
  },
  
  {
    "title": "DEFCON CTF 2017 Quals -- badint",
    "url": "/1784522/",
    "categories": "write-ups",
    "tags": "Python, CTF, Pwnable, DEFCON, heap, heap_overflow, CPP",
    "date": "2017-05-02 22:59:00 +0800",
    





    "snippet": "Category: Potent Pwnables64 bit ELF, Partial RELRO, NX enabled, No canary &amp;amp; PIE. libc not provided.This C++ program will read some input from user, then store the data into the heap memory:$ ./badint SEQ #: 0Offset: 0Data: AAAAAAALSF Yes/No: YesRX PDU [0] [len=4]Assembled [seq: 0]: aaaaaa..."
  },
  
  {
    "title": "DEFCON CTF 2017 Quals -- peROPdo",
    "url": "/1784510/",
    "categories": "write-ups",
    "tags": "Python, C, DEFCON, CTF, Pwnable, ROP, BOF, file_stream_pointer_overflow",
    "date": "2017-05-02 22:58:00 +0800",
    





    "snippet": "Category: Potent Pwnables32 bit ELF, static link, stripped, NX enabled, No PIE &amp;amp; canary.The program is a “rolling dice” program. First we input our name, then the program will ask us how many dice would we like to roll. After we input a number, the program will start generating some rando..."
  },
  
  {
    "title": "33C3 CTF 2016 -- rec",
    "url": "/33c3-ctf-2016-rec/",
    "categories": "write-ups",
    "tags": "33C3, CTF, Python, Pwnable",
    "date": "2016-12-30 01:38:00 +0800",
    





    "snippet": "Category: pwnPoints: 20032 bit ELF, with all the protection enabled.program menu:$ ./rec Calculators are fun!0 - Take note1 - Read note2 - Polish3 - Infix4 - Reverse Polish5 - Sign6 - Exit&amp;gt;   Take note: input a note  Read note: output the note  Polish: do the sum operation or the elementar..."
  },
  
  {
    "title": "33C3 CTF 2016 -- babyfengshui",
    "url": "/33c3-ctf-2016-babyfengshui/",
    "categories": "write-ups",
    "tags": "33C3, CTF, Pwnable, heap_overflow, heap, Python",
    "date": "2016-12-30 00:27:00 +0800",
    





    "snippet": "Category: pwnPoints: 15032 bit ELF, with Partial RELRO, canary &amp;amp; NX enabled, No PIEprogram menu:$ ./babyfengshui0: Add a user1: Delete a user2: Display a user3: Update a user description4: ExitAdd a user:Action: 0size of description: 50 &amp;lt;-- max length of descriptionname: AAAA text ..."
  },
  
  {
    "title": "33C3 CTF 2016 -- ESPR",
    "url": "/33c3-ctf-2016-espr/",
    "categories": "write-ups",
    "tags": "33C3, CTF, Python, Pwnable, format_string",
    "date": "2016-12-29 22:52:00 +0800",
    





    "snippet": "Category: pwnPoints: 150This time there’s no binary or libc.so provided, only an image looks like this:eat:                  sleep:+-----------------+   +----------------+| sub rsp, 0x100  |   | mov edi, 0x1   || mov rdi, rsp    |   | call _sleep    || call _gets      |   |                ||     ..."
  },
  
  {
    "title": "33C3 CTF 2016 -- The 0x90s called",
    "url": "/33c3-ctf-2016-the-0x90s-called/",
    "categories": "write-ups",
    "tags": "CTF, 33C3, Pwnable, local_root",
    "date": "2016-12-29 21:40:00 +0800",
    





    "snippet": "Category: pwnPoints: 150First we’ll have to go to a web page to start our challenge session. The page will show us the port (same IP address with the web page) and the ID/password.Once we connected to the remote host and login the machine, we’ll found that we’re inside a Slackware Linux:$ nc 78.4..."
  },
  
  {
    "title": "33C3 CTF 2016 -- pdfmaker",
    "url": "/1255893/",
    "categories": "write-ups",
    "tags": "33C3, CTF, Python, pdflatext, Misc",
    "date": "2016-12-29 21:05:00 +0800",
    





    "snippet": "Category: MiscPoints: 75  Just a tiny application, that lets the user write some files and compile them with pdflatex.  What can possibly go wrong?  nc 78.46.224.91 24242So this is a service that allow us to create, show &amp;amp; compile some files.  create: Create a file. Valid file format are:..."
  },
  
  {
    "title": "SECCON CTF 2016 -- chat",
    "url": "/seccon-ctf-2016-chat/",
    "categories": "write-ups",
    "tags": "SECCON, CTF, Pwnable, use_after_free, heap, heap_overflow, Python",
    "date": "2016-12-12 16:03:00 +0800",
    





    "snippet": "Category: ExploitPoints: 50064 bit ELF with Partial RELRO, stack canary &amp;amp; NX enabled, No PIE.The program is a simple tweet-chat service:$ ./chatSimple Chat Service1 : Sign Up     2 : Sign In0 : Exitmenu &amp;gt; 1name &amp;gt; userASuccess!1 : Sign Up     2 : Sign In0 : Exitmenu &amp;gt; ..."
  },
  
  {
    "title": "SECCON CTF 2016 -- checker",
    "url": "/seccon-ctf-2016-checker/",
    "categories": "write-ups",
    "tags": "SECCON, CTF, BOF, Pwnable, Python",
    "date": "2016-12-12 16:02:00 +0800",
    





    "snippet": "Category: ExploitPoints: 30064 bit ELF with Full RELRO, stack canary, NX enabled, No PIE.A quick run of the program:$ ./checker Hello! What is your name?NAME : 123Do you know flag?&amp;gt;&amp;gt; 123Do you know flag?&amp;gt;&amp;gt; yesOh, Really??Please tell me the flag!FLAG : asdfYou are a lia..."
  },
  
  {
    "title": "HITCON CTF 2016 Quals -- Shelling Folder",
    "url": "/hitcon-ctf-2016-quals-shelling-folder/",
    "categories": "write-ups",
    "tags": "CTF, HITCON, BOF, Pwnable, heap, Python",
    "date": "2016-10-11 00:11:00 +0800",
    





    "snippet": "Category: pwnPoints: 20064 bit ELF, with all the protection enabled.The program is a simple file system. You can create or delete files and folders, list files in a folder, change the current folder and calculate the size of a folder.It’s a unix-like file system, where folders are also a special ..."
  },
  
  {
    "title": "HITCON CTF 2016 Quals -- Hackpad",
    "url": "/hitcon-ctf-2016-quals-hackpad/",
    "categories": "write-ups",
    "tags": "Python, CTF, HITCON, Crypto, Forensic, padding_oracle_attack",
    "date": "2016-10-11 00:08:00 +0800",
    





    "snippet": "Category: Crypto &amp;amp; ForensicsPoints: 150I did not look at this challenge at first, until I found that many teams have already solved this one except us, so I decide to give it a try :PIt first gave us a pcap file. Several of my teammates have already extract some information before I start..."
  },
  
  {
    "title": "HITCON CTF 2016 Quals -- ROP",
    "url": "/hitcon-ctf-2016-quals-rop/",
    "categories": "write-ups",
    "tags": "CTF, HITCON, ruby, Reversing",
    "date": "2016-10-11 00:07:00 +0800",
    





    "snippet": "Category: ReversePoints: 250The challenge gave us a file call rop.iseq. By checking the file header, I found that it was a binary format of Ruby’s InstructionSequence.By googling the InstructionSequence, I found that there are some new features were added into the ruby version 2.3, for example th..."
  },
  
  {
    "title": "HITCON CTF 2016 Quals -- flame",
    "url": "/hitcon-ctf-2016-quals-flame/",
    "categories": "write-ups",
    "tags": "ruby, CTF, HITCON, Reversing, PPC, PowerPC, assembly, qemu, C",
    "date": "2016-10-11 00:06:00 +0800",
    





    "snippet": "Category: PPC ( more like Reverse )Points: 150We were given a 32 bit PowerPC ELF.Fortunately I’ve got qemu-ppc-static installed on my ctf-box, so we can actually run the program by the following command:# root @ 9c51322c8256 in /mnt/files/hitcon-ctf-2016-qual/flame [7:51:02] $ qemu-ppc-static ./f..."
  },
  
  {
    "title": "HITCON CTF 2016 Quals -- Secret Holder",
    "url": "/hitcon-ctf-2016-quals-secret-holder/",
    "categories": "write-ups",
    "tags": "Python, CTF, Pwnable, use_after_free, heap, HITCON, heap_overflow",
    "date": "2016-10-10 16:10:00 +0800",
    





    "snippet": "Category: pwnPoints: 100I did not finish the challenge during the contest, but was able to solve it after the game. Damn if only I can fuzz some more…64 bit ELF,  with Partial RELRO, canary &amp;amp; NX enabled, no PIE.Program allow us to:  keep secret : new a secret ( using calloc() )  wipe secr..."
  },
  
  {
    "title": "ASIS CTF Finals 2016 -- shadow",
    "url": "/869100/",
    "categories": "write-ups",
    "tags": "CTF, ASIS, Python, Pwnable, shellcode, heap",
    "date": "2016-09-13 23:32:00 +0800",
    





    "snippet": "Category: pwnPoints: 9932 bit ELF, with no NX, PIE, RELRO protection. The program will first use mmap to allocate a range of memory and treat it as a shadow stack, which stores the function return addresses.In the main function the program first ask us to input our name (the buffer was placed in ..."
  },
  
  {
    "title": "ASIS CTF Finals 2016 -- car market",
    "url": "/asis-ctf-finals-2016-car-market/",
    "categories": "write-ups",
    "tags": "CTF, Pwnable, ASIS, Python, use_after_free, heap, off-by-one",
    "date": "2016-09-13 16:54:00 +0800",
    





    "snippet": "Category: pwnPoints: 17764 bit ELF, with Partial RELRO, Canary &amp;amp; NX enabled, no PIE. libc.so was provided.The binary is a car market program. It will let us list our cars’ info, add a car, remove a car and select a car. By selecting a car, we can edit our car model, price and add a custom..."
  },
  
  {
    "title": "MMA 2nd CTF 2016 -- Interpreter",
    "url": "/mma-2nd-ctf-2016-interpreter/",
    "categories": "write-ups",
    "tags": "Python, MMA, CTF, Pwnable",
    "date": "2016-09-13 00:45:00 +0800",
    





    "snippet": "Category: pwnPoints: 20064 bit ELF, with FULL RELRO, NX, stack guard &amp;amp; PIE enabled.After doing some reversing, we found that it’s a Befunge-93 program interpreter. It will first read some Befunge-93 instructions (at most 20000 characters), then interpret &amp;amp; execute those instructio..."
  },
  
  {
    "title": "MMA 2nd CTF 2016 -- greeting",
    "url": "/mma-2nd-ctf-2016-greeting/",
    "categories": "write-ups",
    "tags": "MMA, CTF, format_string, Python, Pwnable",
    "date": "2016-09-12 23:49:00 +0800",
    





    "snippet": "Category: pwnPoints: 150After a long period of time without playing any CTF, I finally finished my master’s degree and have time to enjoy some CTF challenges. And then there is the Tokyo Western/MMA 2nd CTF, the first CTF I played in 2016.The challenge gave us a 32 bit ELF. The program will first..."
  },
  
  {
    "title": "Hack.lu CTF 2015 -- secret library",
    "url": "/hacklu-ctf-2015-secret-library/",
    "categories": "write-ups",
    "tags": "Hack.lu, Reversing, CTF, Python",
    "date": "2015-10-22 19:48:00 +0800",
    





    "snippet": "Category: ReversingPoints: 20064 bit ELFThis service is a some kind of weird library system, which has the following functions:  View the book title. You’ll have to be the “head librarian” ( = admin) first.  View the book content (If you know the exact book title).  Convert a binary string into a..."
  },
  
  {
    "title": "CSAW CTF 2015 -- autobots",
    "url": "/csaw-ctf-2015-autobots/",
    "categories": "write-ups",
    "tags": "Python, CSAW, CTF, PPC, Pwnable, ROP",
    "date": "2015-09-22 23:33:00 +0800",
    





    "snippet": "Category: ExploitablePoints: 350  I hear bots are playing ctfs now.nc 52.20.10.244 8888Once we connect to the service, it will send us a 64 bit ELF binary.int __cdecl main(int argc, const char **argv, const char **envp){    size_t v3; // rax@1    __int16 s; // [sp+0h] [bp-80h]@1    uint16_t v6; /..."
  },
  
  {
    "title": "CSAW CTF 2015 -- wyvern",
    "url": "/csaw-ctf-2015-wyvern/",
    "categories": "write-ups",
    "tags": "ruby, CTF, CSAW, Reversing, pin, side-channel-attack",
    "date": "2015-09-22 12:24:00 +0800",
    





    "snippet": "Category: ReversingPoints: 500Here they gave us another 64 bit ELF, which is apparently written in C++.It will ask us to input a secret, and tell us if we failed or success. The checking secret part in the program was really hard to understand what the actual f*ck is it doing, so I decide to reve..."
  },
  
  {
    "title": "CSAW CTF 2015 -- FTP &amp; FTP2",
    "url": "/csaw-ctf-2015-ftp/",
    "categories": "write-ups",
    "tags": "Python, CTF, CSAW, Reversing, Pwnable, Z3",
    "date": "2015-09-22 10:10:00 +0800",
    





    "snippet": "Category: Reversing (FTP) &amp;amp; Exploitable (FTP2)Points: 300 (FTP) &amp;amp; 300 (FTP2)FTP64 bit ELF. It’s a FTP-like service, we can list all the acceptable command by sending the HELP command. Here are some important commands that we’ll need to pass the challenges:USER [username]: enter us..."
  },
  
  {
    "title": "CSAW CTF 2015 -- Hacking Time",
    "url": "/csaw-ctf-2015-hacking-time/",
    "categories": "write-ups",
    "tags": "Python, CSAW, CTF, Z3, Reversing, NES",
    "date": "2015-09-21 12:50:00 +0800",
    





    "snippet": "Category: ReversingPoints: 200This challenge gave us a NES ROM. After we launch it with NES debugger FCEUX, we found out that it eventually want us to input a password with 24 characters in length .We can found that our input was stored at memory address 0x05 ~ 0x1D. At first I think that the pro..."
  },
  
  {
    "title": "AIS3 2015 pre-exam -- complete writeup",
    "url": "/ais3-2015-pre-exam-complete-writeup/",
    "categories": "write-ups",
    "tags": "AIS3, CTF, Pwnable, Reversing, Crypto, Web, Python, C, PPC, format_string, Misc",
    "date": "2015-08-06 20:15:00 +0800",
    





    "snippet": "考量到參與 AIS3 2015 pre-exam 的人幾乎都是台灣人這個 blog 的第一篇中文 writeup 就獻給這篇了 XD基本上就是全包這次 exam 的所有題目有問題歡迎留言討論MISCMISC1沒啥特別，範例 flag AIS3{hello_world}MISC2給了一個 facebook.zip，有密碼老實說我最討厭這種需要解壓縮檔密碼的題目 = =每次打 CTF 遇到這類型題目沒有一次解出來過 = =也因此是我卡最久的一題之後才知道說要用到一種攻擊叫做 known plaintext attack給定一個加密過的檔案，可以利用原檔案進行攻擊解密出 key網路上還有 to..."
  },
  
  {
    "title": "DEFCON CTF 2015 Quals -- wibbly-wobbly-timey-wimey",
    "url": "/defcon-ctf-2015-quals-wibbly-wobbly-timey-wimey/",
    "categories": "write-ups",
    "tags": "Python, C, DEFCON, CTF, Pwnable, format_string, PPC",
    "date": "2015-05-24 06:40:00 +0800",
    





    "snippet": "Category: PwnablePoints: 2  Wibbly Wobbly Timey WimeyDon’t blink!wwtw_c3722e23150e1d5abbc1c248d99d718d.quals.shallweplayaga.me:260632 bit ELF, with Partial RELRO, stack canary found, NX &amp;amp; PIE enabled.First we’ll have to play a game:You(^V&amp;lt;&amp;gt;) must find your way to the TARDIS(..."
  },
  
  {
    "title": "DEFCON CTF 2015 Quals -- catwestern",
    "url": "/defcon-ctf-2015-quals-catwestern/",
    "categories": "write-ups",
    "tags": "Python, CTF, DEFCON, PPC, C, assembly",
    "date": "2015-05-24 06:39:00 +0800",
    





    "snippet": "Category: Coding ChallengePoints: 1  meowcatwestern_631d7907670909fc4df2defc13f2057c.quals.shallweplayaga.me 9999Interesting challenge. First we connect to the service, it will send us the following message:****Initial Register State****rax=0xfcf7659c7a4ad096rbx=0x1df0e8dfe8f70b53rcx=0x5500416547..."
  },
  
  {
    "title": "DEFCON CTF 2015 Quals -- mathwhiz",
    "url": "/defcon-ctf-2015-quals-mathwhiz/",
    "categories": "write-ups",
    "tags": "Python, DEFCON, CTF, PPC",
    "date": "2015-05-23 22:39:00 +0800",
    





    "snippet": "Category: Baby’s FirstPoints: 1  mathwhiz_c951d46fed68687ad93a84e702800b7a.quals.shallweplayaga.me:21249The challenge’s pretty simple. The service will ask you a bunch of math problems(1000 actually), all you need to do is to answer all of them and you’ll get the flag. Notice that some of the que..."
  },
  
  {
    "title": "DEFCON CTF 2015 Quals -- r0pbaby",
    "url": "/defcon-ctf-2015-quals-r0pbaby/",
    "categories": "write-ups",
    "tags": "DEFCON, CTF, ROP, Pwnable, Python",
    "date": "2015-05-23 22:38:00 +0800",
    





    "snippet": "Category: Baby’s FirstPoints: 1  r0pbaby_542ee6516410709a1421141501f03760.quals.shallweplayaga.me:1043664 bit ELF. No stack guard, but it has NX &amp;amp; PIE protection.The service will give you a menu first:  Welcome to an easy Return Oriented Programming challenge…Menu:1) Get libc address2) Ge..."
  },
  
  {
    "title": "ASIS CTF 2015 Quals -- grids",
    "url": "/asis-ctf-2015-quals/",
    "categories": "write-ups",
    "tags": "ASIS, CTF, PPC, Python",
    "date": "2015-05-23 21:43:00 +0800",
    





    "snippet": "Category: ProgrammingPoints: 300  In each stage send the maximun size of area that can be covered by given points as a vertex of polygon in 2D.nc 217.218.48.84 12433mirror 1 : nc 217.218.48.84 12432mirror 2 : nc 217.218.48.84 12434mirror 2 : nc 217.218.48.84 12429Took me a while to figure out tha..."
  },
  
  {
    "title": "ASIS CTF 2015 Quals -- Saw this (1 &amp; 2)",
    "url": "/asis-ctf-2015-quals-saw-this-1/",
    "categories": "write-ups",
    "tags": "ASIS, CTF, Pwnable, Python, format_string, C",
    "date": "2015-05-23 06:37:00 +0800",
    





    "snippet": "Category: pwnPoints: 100 (Saw this-1), 400 (Saw this-2)  Survive and get the flag!Note: This challenge contains two flags, one of them is easier to fetch, the other is harder. The easier flag will be clearly indicated as “Flag 1”, the harder flag as “Flag 2”nc 87.107.123.3 3133764 bit ELF. Lauch ..."
  },
  
  {
    "title": "VolgaCTF 2015 Quals -- my little pwnie",
    "url": "/volgactf-quals-ctf-2015-my-little-pwnie/",
    "categories": "write-ups",
    "tags": "VolgaCTF, CTF, Python, Pwnable, assembly, format_string, BOF",
    "date": "2015-05-22 22:08:00 +0800",
    





    "snippet": "Category: PwnPoints: 250  Just another pwn task. Break in!  nc pwnie.2015.volgactf.ru 7777  my_little_pwnieI solve the challenge after the end of the CTF, because I think this is a great challenge for practicing format string and sprintf BOF vulnerability. Special thanks to Lays for putting the e..."
  },
  
  {
    "title": "VolgaCTF 2015 Quals -- math problem",
    "url": "/volgactf-2015-quals-math-problem/",
    "categories": "write-ups",
    "tags": "Python, CTF, VolgaCTF, PPC",
    "date": "2015-05-22 13:49:00 +0800",
    





    "snippet": "Category: PPCPoints: 300  nc mathproblem.2015.volgactf.ru 8888This problem remind me of HITCON CTF 2014 – 24The server gave us 5 numbers v1, v2, v3, v4 &amp;amp; v5, and ask us to use +, -, *, /, ( &amp;amp; ) to do some operation with v1, v2, v3 &amp;amp; v4, and make it equal to v5The solution ..."
  },
  
  {
    "title": "BackdoorCTF 2015 -- Binary + Misc",
    "url": "/backdoorctf-2015-binary-misc/",
    "categories": "write-ups",
    "tags": "BackdoorCTF, CTF, Python, ruby, Pwnable, PPC, Misc, Forensic",
    "date": "2015-05-08 01:11:00 +0800",
    





    "snippet": "BackdoorCTF 2015For me, this is a challenge for CTF beginners. Most of the challenges are easy to solve, although some of them require some “imagination”…In this writeup, I’ll post the solutions of all the binary challenges and the misc challenges that I solved in the CTF.BinaryechoBasic BOF. Lau..."
  },
  
  {
    "title": "0CTF 2015 Quals -- geo-newbie",
    "url": "/0ctf-2015-quals-geo-newbie/",
    "categories": "write-ups",
    "tags": "Python, PPC, 0CTF, XCTF, Misc, CTF",
    "date": "2015-05-05 22:26:00 +0800",
    





    "snippet": "  Talentyange gives lots of tedious apks and you know how bad he is now. Let’s try some interesting geography knowledge.  nc 202.112.26.111  29995 /  nc 202.112.28.118 29995So basically we just connect to the server, and it will ask us a bunch of questions about geography. We’ll have to pass 3 le..."
  },
  
  {
    "title": "0CTF 2015 Quals -- (Baby)PolyQuine",
    "url": "/0ctf-2015-quals-babypolyquine/",
    "categories": "write-ups",
    "tags": "Python, ruby, perl, C, Polyglot, Quine, CTF, 0CTF, XCTF, Misc",
    "date": "2015-05-05 15:23:00 +0800",
    





    "snippet": "  Different people see different me.But I am always myself.&amp;lt;202.112.26.114:12321&amp;gt;  Make the output of your program exactly the same as your source code.All 5 correct required to get this flag (Only need 3 correct for BabyPolyQuine)  $python2 –versionPython 2.7.6  $python3 –versionPy..."
  },
  
  {
    "title": "SCTF 2014 -- Code400",
    "url": "/sctf-2014-code400/",
    "categories": "write-ups",
    "tags": "Python, CTF, PPC, XCTF, SCTF, Crypto, CPP",
    "date": "2014-12-09 00:28:00 +0800",
    





    "snippet": "Code400 gave us a python scriptimport jsonimport hashlibimport osimport base64from Crypto.Cipher import AESfp = open(&quot;secret.json&quot;, &quot;r&quot;)secret = json.load(fp)fp.close()if type(secret[&quot;the answer to life the universe and everything&quot;]) != type(u&quot;77&quot;):    dest..."
  },
  
  {
    "title": "SCTF 2014 -- Pwn400",
    "url": "/sctf-2014-pwn400/",
    "categories": "write-ups",
    "tags": "Pwnable, XCTF, SCTF, Python, CTF, heap, shellcode",
    "date": "2014-12-08 22:54:00 +0800",
    





    "snippet": "Similar with Pwn200, Pwn400 gave us a binary file, but no libc.so. Open it with IDA Pro and analyze it, we found some information:First, there’s a data structure ( let’s call it node ) which look like this:struct node{  node *this; // the address of this node  node *prev; // the address of the pr..."
  },
  
  {
    "title": "SCTF 2014 -- Pwn200",
    "url": "/sctf-2014-pwn200/",
    "categories": "write-ups",
    "tags": "Pwnable, XCTF, SCTF, CTF",
    "date": "2014-12-08 21:19:00 +0800",
    





    "snippet": "SCTF is a CTF contest hold by XCTF ( seems like a Chinese version’s CTFtime.org ). Teaming up with my labmates, we have a lot of fun solving the challenges, and scored 2161 pts with the final rank 13/659. In Pwn200, they gave us a binary file and a libc.so. First we open the binary file with IDA ..."
  },
  
  {
    "title": "ASIS CTF Finals 2014 -- TicTac",
    "url": "/asis-ctf-finals-2014-tictac/",
    "categories": "write-ups",
    "tags": "CTF, ASIS, Python, Forensic",
    "date": "2014-10-15 10:41:00 +0800",
    





    "snippet": "Description:  Find flag in this fileAfter extracting data in the compressed file, we found a .pcap file. Analyze the file with Wireshark, we found there’re lots of ICMP packets in it. After checking those packets with eyes wide-open, we found some interesting stuff : one of the ICMP packet contai..."
  },
  
  {
    "title": "ASIS CTF Finals 2014 -- SATELLITE",
    "url": "/asis-ctf-finals-2014-satellite/",
    "categories": "write-ups",
    "tags": "CTF, ASIS, Python, PPC",
    "date": "2014-10-15 00:05:00 +0800",
    





    "snippet": "Description: Connect here and find the flag: nc asis-ctf.ir 12435After we connect to the server, it show us the following message:hi all,  You must send a string for each level that would make the literal True send &quot;Sattelite&quot;Sattelite(¬x2 ∨ ¬x4) ∧ (¬x1 ∨ x2) ∧ (x5 ∨ ¬x1) ∧ (x1 ∨ ¬x1) ∧..."
  },
  
  {
    "title": "ASIS CTF Finals 2014 -- How much exactly + Lottery",
    "url": "/asis-ctf-finals-2014-how-much-exactly-lottery/",
    "categories": "write-ups",
    "tags": "CTF, ASIS, Web, Misc",
    "date": "2014-10-14 23:15:00 +0800",
    





    "snippet": "Both challenges are kind of easy, so I decide to put their writeups together.How much exactly?Description: 4046925: How much the exact IM per year?just do some search on the internet, and we’ll find this link“…..Instant messaging generates five billion messages a day (750GB), or 274 Terabytes a y..."
  },
  
  {
    "title": "CSAW CTF 2014 -- Exploitation 400 saturn",
    "url": "/csaw-ctf-2014-exploitation-400-saturn/",
    "categories": "write-ups",
    "tags": "CTF, CSAW, Python, Pwnable",
    "date": "2014-09-25 17:35:00 +0800",
    





    "snippet": "First the challenge gave us a binary file (ELF for Intel-386). But we can’t execute it, cause we don’t have the required shared library “libchallengeresponse.so”. So we will have to launch IDA Pro to see what’s going on within the program.After analyzing the program ( praise the powerful F5 key! ..."
  },
  
  {
    "title": "CSAW CTF 2014 -- Exploitation 200 pybabbies",
    "url": "/csaw-ctf-2014-exploitation-200-pybabbies/",
    "categories": "write-ups",
    "tags": "CTF, CSAW, Pwnable, Python",
    "date": "2014-09-25 14:32:00 +0800",
    





    "snippet": "CSAW CTF 2014 is the second CTF contest I’ve attended ( the first one was the HITCON CTF 2014 ) . Since this is the first time I’ve actually solved something in the contest, I decide to post my first own writeup .I’ve solved 4 challenges in the contest : Trivia 10 – We don’t know either , Exploit..."
  }
  
]

